# readable values for prompt variables
time24h="\t";
pathShort="\w";

RED='\[\033[0;91m\]';
GREEN='\[\033[0;92m\]';
GREY='\[\033[0;90m\]';
YELLOW='\[\033[1;33m\]';
RESET='\[\033[0m\]';

# get branch name with modification indicator
function __branch_name(){
    #get branch name
    echo $(git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||');
    #files were modified
    git diff --no-ext-diff --quiet --exit-code &>/dev/null 2>&1 || modified=" *";
    #files were added
    git diff-index --cached --quiet HEAD -- &>/dev/null 2>&1 || added=" +";
    echo "${branch}";
    if [ "${added}" ] ; then
      echo "${added}";
    fi
    if [ "${modified}" ] ; then
      echo "${modified}";
    fi
}

# build prompt.
export PS1=${GREY}${time24h}' $(git rev-parse --is-inside-work-tree >/dev/null 2>&1;\
if [ $? -eq 0 ]; then \
  echo "$(echo `git status` | grep "nothing to commit" > /dev/null 2>&1; \
  if [  "$?" -eq "0" ]; then \
    # @4 - Clean repository - nothing to commit
    echo "'${GREEN}'("$(__branch_name "%s")")"; \
  else \
    # @5 - Changes to working tree
    echo "'${RED}'{"$(__branch_name "{%s}")"}"; \
  fi) '${YELLOW}${pathShort}${RESET}' \$ "; \
else \
  # @2 - Prompt when not in GIT repo
  echo " '${YELLOW}${pathShort}${RESET}' \$ "; \
fi)'

#TODO: use $(git status -sb | wc -l) -eq "1" to check for changes on branch?